name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      docker_image:
        description: 'Docker image name'
        required: true
        type: choice
        options:
          - 'missaelcorm/schedulesync-api'
          - 'missaelcorm/schedulesync-web'
      docker_tag:
        description: 'Docker image tag'
        required: true
        default: 'latest'
      deploy-k8s:
        type: boolean
        description: 'Deploy to Kubernetes'
        required: true
        default: false

jobs:     
  build_and_push:
    runs-on: [ubuntu-latest]
    env: 
      DOCKER_IMAGE: ${{ github.event.inputs.docker_image }}
      DOCKER_TAG: ${{ github.event.inputs.docker_tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set Docker Context
      run: |
        if [ "${{ env.DOCKER_IMAGE }}" == "missaelcorm/schedulesync-api" ]; then
          echo "DOCKER_LOCAL_CONTEXT=backend" >> $GITHUB_ENV
        elif [ "${{ env.DOCKER_IMAGE }}" == "missaelcorm/schedulesync-web" ]; then
          echo "DOCKER_LOCAL_CONTEXT=frontend" >> $GITHUB_ENV
        fi

    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
      uses: docker/login-action@v3.1.0
      with:
        # Username used to log against the Docker registry
        username: ${{ secrets.DOCKER_USER }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
      uses: docker/build-push-action@v5.3.0
      with:
        # Build's context is the set of files located in the specified PATH or URL
        context: ./${{ env.DOCKER_LOCAL_CONTEXT }}
        # Path to the Dockerfile
        file: ./${{ env.DOCKER_LOCAL_CONTEXT }}/Dockerfile
        # Push is a shorthand for --output=type=registry
        push: true
        # List of tags
        tags: "${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}'
        format: 'json'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH,MEDIUM'
      continue-on-error: true

  trigger_deploy:
    runs-on: [ubuntu-latest]
    if: github.event.inputs.deploy-k8s == true
    needs: [build_and_push]
    env:
      DOCKER_IMAGE: ${{ github.event.inputs.docker_image }}
      DOCKER_TAG: ${{ github.event.inputs.docker_tag }}
      WORKFLOW_NAME: 'deploy-schedulesync-api'
    steps:
    - name: Trigger CD Pipeline at ${{ vars.SCHEDULESYNC_DEVOPS_REPO }} repo
      run: |
        curl -X POST https://api.github.com/repos/${{ vars.SCHEDULESYNC_DEVOPS_REPO }}/dispatches \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ secrets.PAT_GA_SCHEDULESYNC_DEVOPS }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        --data '{"event_type": "${{ env.WORKFLOW_NAME }}", "client_payload": { "repository": "${{ env.GITHUB_REPOSITORY }}", "docker_tag": "${{ env.DOCKER_TAG }}", "docker_image": "${{ env.DOCKER_IMAGE }}" }}'
        
    
        
          
